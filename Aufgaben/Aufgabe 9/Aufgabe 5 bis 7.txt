//Aufgabe 5 - 7

Aufgabe 5 Beschreiben Sie die User Interaktinoen beim optimistischen locking. Als welche Fälle können auftreten und wie soll die Softwware 
darauf reagieren. Legen Sie die Antworten entweder beschreibend als Textfile ab oder implementieren Sie dieses.
Möchte ein Benutzr einen Lesezugriff auf die Datenbank absetzen, bekommt dieser im Normalfall die gewünschten Daten. Nun werden Änderung zurückgeschrieben.
Der Benutzer hat in der Zeitspanne des Lesen Daten erhalten, welche vielleicht in der gleiche Zeit geändert wurde.Das optische Locking führt eine Versionsnummer
ein, um dies zu verhindern. Bei einer Änderunge der Versionsnummer zwischen dem Lesezugriff und dem Schreibzugriff so darf die Änderung nich in die Datenbank 
geschrieben werden.


Aufgabe 6 Beschreiben Sie einen Deadlock
Ein Deadlock kann auftreten, wenn Prozesse oder Threads auf das gewünschte Betriebsmittel warten müssen und das Betriebsmittel nicht freigegeben werden kann. 
Nun können die Prozesse oder Threads deren Aufgaben nicht mehr fertigstellen und beenden. Sie sind sozusagen ineinander verklemmt. 

Beispiel: 
Prozess A und Prozess B laufen parallel. 
Prozess A möchte auf Konto X schreiben. Wenn B schreiben will, muss er warten, bis Prozess A es wieder freigibt. 
Prozess B möchte gleichzeitig auf das Konto Y schreiben. 
Prozess A möchte etwas ins Konto Y schreiben und wartet deshalb, bis B Konto Y freigibt. Konto X ist immer noch bei A geblockt. 
Prozess B muss jedoch zuerst ins Konto X schreiben, jedoch muss er warten bis A Konto X freigibt.
Situation: A wartet auf B und B wartet auf A. Beide werden ewig warten müssen, da keiner der Prozesse weitermachen und das benötigte Betriebsmittel freigeben werden kann. 



Aufgabe 7 Welche probleme durch mangelnde Transaktionsisolation können durch ein optimistisches locking behoben werden?
Beim Optimistischen Locking wird mehreren Nutzern Parallelzugriff gewährt. Somit haben alle Benutzer grundsätzlich Leserechte, um z. B. Artikelinformationen aufzurufen. Wenn aber ein Artikel von einem der Benutzer geändert wurde, so bekommen die anderen Nutzer, die denselben Datensatz fast gleichzeitig zu ändern versuchen, eine Benachrichtigung, dass der Artikel aktualisiert wurde. In diesem Fall ist also der Nutzer privilegiert, der zuerst den Datensatz geändert hat. Wenn der Nutzer den Datensatz verlässt, wird ihm sein Privileg wieder entzogen, und ein nächster Anwender erhält Schreibzugriff.
Im Gegensatz dazu wird beim Pessimistischen Locking beim Zugriff eines Benutzers auf den Datensatz der Schreib- und Lesezugriff für alle anderen Nutzer gesperrt. Es ist damit also für weitere Benutzer nicht mehr möglich, einen Datensatz aufzurufen oder auszudrucken, bis der Datensatz wieder freigegeben wird.
Beim Pessimistischen Locking wird angenommen, dass ein Datensatz bei (fast) jedem Zugriff geändert werden soll. Das Optimistische Locking hingegen geht von der Prämisse aus, dass Datensätze vorwiegend für den Lesezugriff geöffnet werden.